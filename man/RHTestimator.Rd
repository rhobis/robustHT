% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RHTestimator.R
\name{RHTestimator}
\alias{RHTestimator}
\title{Robust Horvitz-Thompson estimator}
\usage{
RHTestimator(
  ys,
  pks = NULL,
  method = c("find_c", "Delta_min"),
  sampling = c("ups", "srs", "poisson"),
  pkls = NULL,
  n = NULL,
  N = NULL,
  grid_length = 4 * length(ys)
)
}
\arguments{
\item{ys}{vector of sample observations}

\item{pks}{vector of sample first-order inclusion probabilities; only required if
\code{sampling="ups"} or \code{sampling="poisson"}}

\item{method}{string that determines how to compute the penalised part of
the robust estimator. Available methods are 'find_c' and 'Delta_min',
see section Details for more information.}

\item{sampling}{string indicating whether the conditional bias is to be computed
for a generic unequal probability sampling design (\code{"ups"}), a simple
random sampling (\code{"srs"}) or for Poisson sampling (\code{"poisson"}).}

\item{pkls}{matrix of size nxn with joint-inclusion probabilities;
required only with \code{sampling="ups"}}

\item{n}{integer, the sample size; used only with \code{sampling="srs"}}

\item{N}{integer, the population size; used only with \code{sampling="srs"}}

\item{grid_length}{integer scalar indicating the length of the grid of values that
is generated to estimate the optimum value for c}
}
\value{
The Robust Horvitz-Thompson estimate
}
\description{
Estimate the robust Horvitz-Thompson by
Beaumont, Haziza, Ruiz-Gazen (2013)
}
\details{
The argument \code{method} accepts as input the strings 'find_c' or 'Delta_min'.
If the former is chosen, the \eqn{Delta}{\Delta(c)} component in the robust estimator
is computed by finding the optimal \code{c} value over a grid of values, while
the former computes the \eqn{Delta}{\Delta(c)} corresponding to the optimum \code{c}
by using the formula provided by Beaumont, Haziza and Ruiz-Gazen (2013), section 3.3
}
\examples{
# Generate population data
N <- 50; n <- 5

set.seed(0)
x <- rgamma(500, scale=10, shape=5)
y <- abs( 2*x + 3.7*sqrt(x) * rnorm(N) )

# Select sample
pik <- n * x/sum(x)
s   <- sample(N, n)
ys <- y[s]
piks <- pik[s]

# Estimate the robust HT total
RHTestimator(ys, piks, method='find_c', sampling='poisson')
RHTestimator(ys, piks, method='Delta_min', sampling='poisson')



}
